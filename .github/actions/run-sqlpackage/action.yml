name: 'Running SqlPackage command'
description: 'Runs a SqlPackage command'
inputs:
  action:
    description: 'Action parameter to run with SqlPackage. Supported values: Publish, DeployReport, DriftReport, Script'
    required: true
  sourcepath:
    description: 'The path where to look for the DACPAC file'
    required: true
  profile:
    description: 'The profile path to use during the execution. It has to be an xml file'
    required: true
  authtoken:
    description: 'The authentication token used to connect to the database, if credentials not indicated in the connection string'
    required: true
  outputpath:
    description: 'The output folder where assets will be generated if any'
    required: false
    default: .
  outputfile:
    description: 'The output file name. The final name of the file will be [dacpac_name].[outputfile]'
    required: false
    default: 'deployreport.xml' 
runs:
  using: "composite"
  steps:
    - name: Installing SQL Data Tools
      shell: bash
      run: |
        if test -f "/opt/sqlpackage/sqlpackage"; then
          echo "::debug::SqlPackage already installed in the context"
        else
          sudo apt-get install libunwind8
          wget -progress=bar:force -q -O sqlpackage.zip \
            https://aka.ms/sqlpackage-linux \
            && unzip -qq sqlpackage.zip -d /opt/sqlpackage \
            && chmod a+x /opt/sqlpackage/sqlpackage \
            && rm sqlpackage.zip
        fi

    - id: sqlpackage
      name: Identifying proposed changes
      shell: bash
      run: |
        echo "::debug::Ensuring target folder '${{ inputs.outputpath }}'"
        mkdir -p ${{ inputs.outputpath }}
        
        PACKAGE_PATHS=$(find ${{ inputs.sourcepath }} -name '*.dacpac' -exec basename {} \;)

        for PACKAGE in $PACKAGE_PATHS
        do
          echo "::debug::Runing ${{ inputs.action }} on package $PACKAGE"
          
          if [[ '${{ inputs.action }}' == 'Publish' ]]; then
            /opt/sqlpackage/sqlpackage \
              /Action:${{ inputs.action }} \
              /SourceFile:${{ inputs.sourcepath }}/$PACKAGE \
              /Profile:${{ inputs.profile }} \
              /AccessToken:${{ inputs.authtoken }}
          else
            PACKAGE_NAME="${PACKAGE%.*}"

            /opt/sqlpackage/sqlpackage \
              /Action:${{ inputs.action }} \
              /SourceFile:${{ inputs.sourcepath }}/$PACKAGE \
              /Profile:${{ inputs.profile }} \
              /AccessToken:${{ inputs.authtoken }} \
              /OutputPath:${{ inputs.outputpath }}/$PACKAGE_NAME.${{ inputs.outputfile }} \
              /OverwriteFiles:True
          fi
        done